{
  "objective": {
    "answer": "The primary objective of the paper is to propose a multi-faceted, multi-scale representation for protocol design in self-driving laboratories, which aims to enhance the capabilities of knowledge-based machine designers, such as Large Language Models, in automating the design of experimental protocols.",
    "evidence": "To tackle this issue, we propose a multi-faceted, multi-scale representation, where instance actions, generalized operations, and product flow models are hierarchically encapsulated using Domain-Specific Languages."
  },
  "knowledge_gap": {
    "answer": "The paper addresses the gap in the systematic representation of experimental knowledge, which is necessary for automating protocol design in self-driving laboratories. Existing systems lack a structured approach to integrate and utilize experimental knowledge effectively.",
    "evidence": "Efforts to automate protocol design have been initiated, but the capabilities of knowledge-based machine designers, such as Large Language Models, have not been fully elicited, probably for the absence of a systematic representation of experimental knowledge, as opposed to isolated, flatten pieces of information."
  },
  "novelty": {
    "answer": [
      "The introduction of a hierarchically encapsulated representation using Domain-Specific Languages for protocol design.",
      "A data-driven algorithm that autonomously customizes these representations for specific domains.",
      "The dual representation of operation-centric and product-flow-centric views to facilitate protocol verification."
    ],
    "evidence": [
      "We propose a multi-faceted, multi-scale representation, where instance actions, generalized operations, and product flow models are hierarchically encapsulated using Domain-Specific Languages.",
      "We further develop a data-driven algorithm based on non-parametric modeling that autonomously customizes these representations for specific domains.",
      "The dual representation of operation-centric and product-flow-centric views reciprocatively facilitates the verification of the designed protocols."
    ]
  },
  "inspirational_papers": {
    "answer": "- Mehr et al. (2020) The concept of self-driving laboratory has been introduced to substantially accelerate the validation process, in organic chemical synthesis. (Experimental baselines)\n- O’Donoghue et al. (2023) Benchmarking results indicate that the expected capability of LLMs in protocol design is not fully elicited. (Papers with limitations addressed by this work)",
    "evidence": "The concept of self-driving laboratory has been introduced to substantially accelerate the validation process, in organic chemical synthesis (Mehr et al., 2020; Burger et al., 2020)... Regrettably, benchmarking results indicate that the expected capability of LLMs in protocol design is not fully elicited (O’Donoghue et al., 2023)."
  },
  "method": {
    "steps": [
      {
        "step": "Formulate the protocol design problem and introduce the three hierarchies of representations.",
        "input": "Original full protocol, experimental objective, domain of experiment, available reagents.",
        "output": "Hierarchically encapsulated representation of protocols.",
        "evidence": "We first formulate the basic protocol design problem in Sec. 2.1. Afterwards, starting from the original full protocol, we introduce the three hierarchies of representations."
      },
      {
        "step": "Develop a data-driven algorithm for automatic representation generation.",
        "input": "Domain-specific corpus of existing protocols.",
        "output": "Automatically generated domain-specific representation.",
        "evidence": "We develop an algorithm that conducts multi-hierarchy encapsulation automatically driven by the domain-specific corpus of existing protocols."
      }
    ],
    "tools": [
      {
        "name": "Domain-Specific Languages (DSLs)",
        "description": "Used to implement the hierarchical representation for protocol design.",
        "evidence": "We implement the representation using Domain-Specific Languages (DSLs)."
      }
    ],
    "benchmark_datasets": [
      {
        "name": "Domain-specific corpus",
        "data_description": "Existing protocols published in top-quality journals within the corresponding experimental domain.",
        "usage": "Used for automatic representation generation.",
        "evidence": "The domain-specific corpus C = {Φ1, Φ2, . . . , Φ|C|} consists of existing protocols published in top-quality journals within the corresponding experimental domain."
      }
    ],
    "evaluation_metrics": [
      {
        "name": "Intersection over Union (IoU)",
        "purpose": "Measures the overlap between designed and groundtruth protocols.",
        "application": "Used to evaluate the consistency of operations, products, and devices.",
        "evidence": "The six dimensions include: (i) IoU on operations, IoU(Op) = IoU({φ1...|Φ|}, {φ′1...|Φ′|}), IoU between instance actions of the designed protocol Φ and the groundtruth Φ′."
      },
      {
        "name": "Sequence Alignment (SA)",
        "purpose": "Measures similarity between execution sequences of protocols.",
        "application": "Used to evaluate the consistency of execution sequences.",
        "evidence": "Similarity between the execution sequences, Sim(Exec) = SeqAlign(⟨φ0...|Φ|⟩, ⟨φ′0...|Φ′|⟩), where SeqAlign(·, ·) denotes the ordered sequence similarity score calculation by the SA algorithm."
      }
    ]
  },
  "method_type": {
    "methods": [
      {
        "name": "Experimental design generation",
        "description": "The approach includes producing experimental protocols, configurations, or evaluation strategies.",
        "evidence": "The proposed representation is equipped with various machine designers to manage protocol design tasks, including planning, modification, and adjustment."
      },
      {
        "name": "Knowledge Extraction and Structurization",
        "description": "The system extracts and organizes knowledge from existing protocols to create structured representations.",
        "evidence": "We propose a multi-faceted, multi-scale representation, where instance actions, generalized operations, and product flow models are hierarchically encapsulated using Domain-Specific Languages."
      }
    ]
  },
  "subject_area": {
    "areas": [
      {
        "name": "Applied Sciences & Engineering",
        "description": "The paper focuses on automating protocol design in self-driving laboratories, which is a significant aspect of applied sciences and engineering.",
        "evidence": "The concept of self-driving laboratory has been introduced to substantially accelerate the validation process, in organic chemical synthesis, cell biology for medical research, and novel material discovery."
      },
      {
        "name": "Interdisciplinary Sciences",
        "description": "The methodology integrates concepts from computer science, cognitive science, and experimental sciences.",
        "evidence": "We draw inspiration from both cognitive science literature on rationality and computer science literature on hierarchical abstraction."
      }
    ]
  },
  "performance_summary": {
    "performance_summary": [
      {
        "summary": "The proposed method significantly outperformed alternative approaches in protocol design tasks across multiple domains.",
        "evidence": "EE+ and EI+ significantly outperform other alternative approaches (EE+ outperforms EE: t(278) = 8.007, µd < 0, p < .0001; EI+ outperforms EI: t(278) = 8.397, µd < 0, p < .0001)."
      }
    ],
    "baselines": [
      {
        "name": "Flatten-Baseline (FB)",
        "description": "LLM with RAG on original protocol corpora.",
        "evidence": "The combination of representation and designer does not span a Cartesian space due to the intrinsic limitations of Flatten and Baseline."
      },
      {
        "name": "Instance-Baseline (IB)",
        "description": "LLM retrieval on the protocol corpora translated into instance actions.",
        "evidence": "In the IB approach, three similar protocols’ instance actions (like Python pseudofunctions definitions) are first retrieved from the corpora."
      }
    ],
    "benchmark_datasets": [
      {
        "name": "Domain-specific corpus",
        "data_description": "Existing protocols published in top-quality journals within the corresponding experimental domain.",
        "usage": "Used for automatic representation generation.",
        "evidence": "The domain-specific corpus C = {Φ1, Φ2, . . . , Φ|C|} consists of existing protocols published in top-quality journals within the corresponding experimental domain."
      }
    ],
    "evaluation_metrics": [
      {
        "name": "Intersection over Union (IoU)",
        "purpose": "Measures the overlap between designed and groundtruth protocols.",
        "application": "Used to evaluate the consistency of operations, products, and devices.",
        "evidence": "The six dimensions include: (i) IoU on operations, IoU(Op) = IoU({φ1...|Φ|}, {φ′1...|Φ′|}), IoU between instance actions of the designed protocol Φ and the groundtruth Φ′."
      },
      {
        "name": "Sequence Alignment (SA)",
        "purpose": "Measures similarity between execution sequences of protocols.",
        "application": "Used to evaluate the consistency of execution sequences.",
        "evidence": "Similarity between the execution sequences, Sim(Exec) = SeqAlign(⟨φ0...|Φ|⟩, ⟨φ′0...|Φ′|⟩), where SeqAlign(·, ·) denotes the ordered sequence similarity score calculation by the SA algorithm."
      }
    ]
  },
  "benchmark_dataset": {
    "name": null,
    "description": "No traditional benchmark dataset was used in the study.",
    "usage": "The study relied on domain-specific corpora of existing protocols.",
    "evidence": "The domain-specific corpus C = {Φ1, Φ2, . . . , Φ|C|} consists of existing protocols published in top-quality journals within the corresponding experimental domain."
  },
  "limitations": {
    "limitations": [
      {
        "name": "Domain-Specific Knowledge Dependency",
        "description": "The proposed representation can be highly dependent on domain-specific knowledge, which varies significantly across different domains.",
        "evidence": "The distributions of reagents, operations, and execution dependencies vary significantly across different domains in experimental sciences, such as Genetics, Medical, Bioengineering, and Ecology."
      },
      {
        "name": "Manual Crafting of DSLs",
        "description": "Manually crafting DSLs specialized for different domains requires deep integration between domain experts and programming language experts, which is labor-intensive and costly.",
        "evidence": "Manually crafting DSLs specialized for these domains requires deep integration between domain experts and programming language experts, which is labour-intensive, case-by-case, and costly."
      }
    ]
  },
  "future_directions": {
    "future_directions": [
      {
        "name": "Broader Domain Application",
        "description": "Develop methods to make the representation specification more affordable and applicable to a broader set of domains.",
        "evidence": "To make the representation specification more affordable, we develop an algorithm that conducts multi-hierarchy encapsulation automatically driven by the domain-specific corpus of existing protocols."
      },
      {
        "name": "Enhance LLM Capabilities",
        "description": "Further enhance the capabilities of LLMs in protocol design by integrating the proposed representation as an auxiliary module.",
        "evidence": "This further indicates that our proposed automatic representation generation approach possesses the potential to function as an auxiliary module for LLMs, enhancing their capability on protocol design."
      }
    ]
  },
  "resource_link": {
    "answer": "",
    "evidence": ""
  }
}