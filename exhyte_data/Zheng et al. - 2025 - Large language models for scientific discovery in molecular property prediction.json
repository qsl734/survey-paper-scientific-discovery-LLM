{
  "Inputs to the workflow": {
    "performed": "Yes",
    "User provide high-level research direction or goal": {
      "performed": "Yes",
      "Format": "Research goal/problem statement",
      "Example": "Accelerate scientific discovery in molecular property prediction using LLMs.",
      "Role in workflow": "Defines the main objective and scope for the LLM4SD pipeline."
    },
    "User provide structured, domain-specific specifications": {
      "performed": "No"
    },
    "User provide research papers": {
      "performed": "No"
    },
    "User provide datasets other than research papers": {
      "performed": "Yes",
      "Format": "Open-source molecular property datasets (e.g., MoleculeNet, BBBP, ClinTox, Tox21, SIDER, HIV, BACE, ESOL, FreeSolv, Lipophilicity, QM9)",
      "Example": "BBBP dataset with 2,039 instances labeled for blood–brain barrier permeability.",
      "Role in workflow": "Provides empirical data for knowledge inference and model training."
    },
    "User provide representations or formal inputs": {
      "performed": "Yes",
      "Format": "SMILES strings, molecular property labels",
      "Example": "SMILES string and logP score for a molecule.",
      "Role in workflow": "Serves as input for LLM-based rule inference and feature extraction."
    }
  },
  "Query Structuring": {
    "performed": "Yes",
    "Query Decomposition": {
      "performed": "No"
    },
    "Structural or Entity Decomposition": {
      "performed": "Yes",
      "Method details": "LLMs analyze molecular structures (SMILES) to identify substructures and features relevant to property prediction.",
      "Inputs": "SMILES strings, molecular property labels",
      "Outputs": "Rules/features such as presence of halogens, aromatic rings, molecular weight",
      "Example": "Identifying that molecules containing halogens are more likely to cross the blood–brain barrier.",
      "Role in workflow": "Enables feature-level reasoning and interpretable property prediction."
    },
    "Workflow Decomposition": {
      "performed": "No"
    },
    "Textual or Knowledge Embedding": {
      "performed": "No"
    },
    "Molecular or Chemical Embedding": {
      "performed": "No"
    },
    "Biological or Phenotypic Embedding": {
      "performed": "No"
    },
    "Pattern and Feature Extraction": {
      "performed": "Yes",
      "Method details": "LLMs extract patterns and features from labeled molecular datasets by analyzing SMILES and associated properties.",
      "Inputs": "SMILES strings, property labels",
      "Outputs": "Empirical rules/features (e.g., functional groups, substructures) for model input",
      "Example": "Detecting that carbonyl groups or fragment rings influence BBB permeability.",
      "Role in workflow": "Generates interpretable features for downstream model training."
    },
    "Biological Relationship Extraction": {
      "performed": "No"
    },
    "Property and Annotation Extraction": {
      "performed": "Yes",
      "Method details": "LLMs synthesize known molecular properties from literature (e.g., molecular weight, logP) as features.",
      "Inputs": "Pretrained LLM knowledge, literature-derived rules",
      "Outputs": "Feature rules such as 'molecular weight < 500 Da' for BBB permeability",
      "Example": "Extracting Lipinski's rule of five for drug-likeness.",
      "Role in workflow": "Provides domain-relevant features for interpretable modeling."
    },
    "Sequence and Structure Feature Extraction": {
      "performed": "No"
    }
  },
  "Data Retrieval": {
    "performed": "Yes",
    "Data Retrieval via Multi-Query Generation and Exploration": {
      "performed": "No"
    },
    "Literature and Data Retrieval via APIs": {
      "performed": "No"
    },
    "Data Retrieval with Prioritization and Filtering Agents": {
      "performed": "No"
    },
    "Domain-Specific Data Retrieval and Reasoning": {
      "performed": "No"
    },
    "Code-Driven or Tool-Augmented Data Retrieval": {
      "performed": "Yes",
      "Method details": "Python code (using RDKit) is generated by LLMs to compute molecular features from SMILES.",
      "Inputs": "SMILES strings, feature rules",
      "Outputs": "Feature vectors for each molecule",
      "Example": "Using rdMolDescriptors.CalcExactMolWt(mol) < 500 to encode molecular weight.",
      "Role in workflow": "Automates feature extraction for model input."
    },
    "Literature data Retrieval Citation-Network–Based Expansion": {
      "performed": "No"
    },
    "Literature data Retrieval via Semantic and Similarity-Based analysis": {
      "performed": "No"
    },
    "Literature data Retrieval via Multi-Step Reference and Evidence Selection": {
      "performed": "No"
    },
    "Domain-Specific Literature data Retrieval": {
      "performed": "No"
    },
    "Manual and Semi-Automatic Curation of Literature data": {
      "performed": "No"
    },
    "Structural or Similarity-Based Dataset Retrieval": {
      "performed": "No"
    },
    "Data Retrieval via Domain-Specific Repository Querying": {
      "performed": "Yes",
      "Method details": "Datasets are downloaded from domain repositories (e.g., MoleculeNet, DeepChem).",
      "Inputs": "Repository URLs, dataset names",
      "Outputs": "Structured datasets for model training and evaluation",
      "Example": "Downloading BBBP.csv from DeepChem data repository.",
      "Role in workflow": "Provides standardized datasets for benchmarking."
    },
    "Library Assembly and Data Augmentation": {
      "performed": "No"
    }
  },
  "Knowledge Assembly": {
    "performed": "Yes",
    "Standardized Section Extraction from Literature data": {
      "performed": "No"
    },
    "Concise Synopsis and Summarization of Literature data": {
      "performed": "Yes",
      "Method details": "LLMs synthesize and summarize key rules and principles from their pretrained literature.",
      "Inputs": "LLM internal knowledge, literature-derived prompts",
      "Outputs": "Summarized rules for molecular property prediction",
      "Example": "Summarizing that molecular weight and hydrogen bond donors are key for BBB permeability.",
      "Role in workflow": "Condenses literature knowledge into actionable rules."
    },
    "Facet-Based or Field-Specific Extraction from Literature data": {
      "performed": "No"
    },
    "Domain-Tailored Extraction from Literature data": {
      "performed": "Yes",
      "Method details": "LLMs extract domain-specific rules (e.g., Lipinski's rule, substructure-property links) relevant to molecular property prediction.",
      "Inputs": "LLM pretrained on scientific literature",
      "Outputs": "Task-specific rules/features",
      "Example": "Extracting that topological polar surface area is important for BBB permeability.",
      "Role in workflow": "Provides domain-relevant structured knowledge for feature engineering."
    },
    "Task/Entity-Centric Knowledge Graphs": {
      "performed": "No"
    },
    "Causal or Relation-Specific Knowledge Graphs": {
      "performed": "No"
    },
    "Biomedical or Domain-Specific Interaction Graphs": {
      "performed": "No"
    },
    "Literature Database Construction": {
      "performed": "No"
    },
    "Entity- or Co-Occurrence–Based Databases": {
      "performed": "No"
    },
    "Reasoning-Chain or Temporal Databases for Literature": {
      "performed": "No"
    }
  },
  "Hypothesis/Idea Generation": {
    "performed": "Yes",
    "Idea/hypothesis generation without additional literature or dataset as context": {
      "performed": "Yes",
      "Method details": "LLMs generate rules/features for molecular property prediction based on internalized literature knowledge.",
      "Inputs": "LLM pretrained knowledge, prompts",
      "Outputs": "Rules such as 'molecular weight < 500 Da' for BBB permeability",
      "Example": "LLM proposes 20 rules for BBB permeability based on literature.",
      "Role in workflow": "Provides initial hypotheses/features for property prediction."
    },
    "LLM Agent Generate ideas/hypotheses via Task Decomposition": {
      "performed": "No"
    },
    "Generate ideas/hypotheses using Domain-Specialized LLM Agent": {
      "performed": "Yes",
      "Method details": "Domain-specific LLMs (e.g., Galactica, ChemLLM) generate hypotheses/rules tailored to chemistry tasks.",
      "Inputs": "Domain-specific LLMs, prompts",
      "Outputs": "Chemistry-relevant rules/features",
      "Example": "Galactica-6.7b generates rules for predicting Gibbs free energy.",
      "Role in workflow": "Leverages domain expertise for hypothesis generation."
    },
    "Literature data used during idea/hypothesis generation as context": {
      "performed": "No"
    },
    "Summarization Literature data used during idea/hypothesis generation": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Facet Recombination": {
      "performed": "No"
    },
    "Idea/hypothesis generation via contructed Reasoning-Chain from literature": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Knowledge Graph developed from literature": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Pattern Detection from dataset": {
      "performed": "Yes",
      "Method details": "LLMs analyze labeled molecular datasets to infer empirical rules/patterns linking structure to property.",
      "Inputs": "SMILES strings, property labels",
      "Outputs": "Data-driven rules/features (e.g., presence of halogens increases BBB permeability)",
      "Example": "LLM infers that molecules with halogens are more likely to cross the BBB.",
      "Role in workflow": "Generates hypotheses/features grounded in observed data patterns."
    },
    "Idea/hypothesis generation via Few-Shot Data Seeding": {
      "performed": "No"
    },
    "Idea/hypothesis generation using Observational data": {
      "performed": "Yes",
      "Method details": "LLMs are prompted with batches of SMILES and labels to induce rules from observed input-output pairs.",
      "Inputs": "Sampled SMILES-label pairs",
      "Outputs": "Empirical rules/features for property prediction",
      "Example": "LLM observes that certain substructures correlate with high solubility.",
      "Role in workflow": "Transforms observed data into actionable hypotheses."
    },
    "Idea/hypothesis generation via Feature-Driven Property Prediction": {
      "performed": "Yes",
      "Method details": "LLMs identify structural features in molecules that predict properties, used as input for interpretable models.",
      "Inputs": "SMILES strings, property labels",
      "Outputs": "Feature vectors for property prediction",
      "Example": "LLM identifies that fragment rings are predictive for BBB permeability.",
      "Role in workflow": "Links features to property outcomes for hypothesis-driven modeling."
    },
    "Idea/hypothesis generation after Fine-Tuning the LLM model": {
      "performed": "No"
    }
  },
  "Hypothesis/Idea Prioritization": {
    "performed": "Yes",
    "LLM-based Hypothesis/Idea evaluation via Scientific Quality": {
      "performed": "No"
    },
    "LLM-based Hypothesis/Idea evaluation via Domain-Specific Evaluation": {
      "performed": "No"
    },
    "LLM-based Hypothesis/Idea evaluation via Contextual Evidence Scoring": {
      "performed": "No"
    },
    "LLM-based Hypothesis/Idea evaluation via Interpretability or Success Metrics": {
      "performed": "Yes",
      "Method details": "Interpretable models (random forest) quantify rule importance, revealing which features are critical for predictions.",
      "Inputs": "Feature vectors, trained model",
      "Outputs": "Feature importance scores, interpretable model outputs",
      "Example": "Random forest shows molecular weight is a key predictor for BBB permeability.",
      "Role in workflow": "Assesses and ranks hypotheses/features by predictive value and interpretability."
    },
    "Hypothesis/Idea evaluation via Novelty Checking with Literature Comparison": {
      "performed": "Yes",
      "Method details": "Statistical tests and expert literature review determine if inferred rules are novel or already documented.",
      "Inputs": "Generated rules, literature search results",
      "Outputs": "Classification of rules as literature-supported or novel",
      "Example": "Experts review if a statistically significant rule is found in existing literature.",
      "Role in workflow": "Identifies novel, potentially new scientific insights."
    },
    "Hypothesis/Idea evaluation via Alignment with Literature Chains": {
      "performed": "No"
    },
    "Hypothesis/Idea evaluation via Knowledge-Graph Grounded Similarity Metrics": {
      "performed": "No"
    },
    "Hypothesis/Idea evaluation via Quantitative Assessment Using Domain Metrics": {
      "performed": "Yes",
      "Method details": "Statistical tests (Mann–Whitney U-test, linear regression t-test) assess rule significance for classification/regression tasks.",
      "Inputs": "Feature values, target labels",
      "Outputs": "P-values, significance classification",
      "Example": "Mann–Whitney U-test confirms a rule distinguishes BBB-permeable from non-permeable molecules.",
      "Role in workflow": "Objectively validates the predictive value of generated hypotheses."
    },
    "Hypothesis/Idea evaluation via Human/Expert": {
      "performed": "Yes",
      "Method details": "Domain experts review statistically significant rules for literature support and scientific plausibility.",
      "Inputs": "Generated rules, literature search results",
      "Outputs": "Expert-validated rule classifications",
      "Example": "Pharmacologists review rules for BBB permeability against Google Scholar.",
      "Role in workflow": "Provides expert judgment and validation of automated findings."
    }
  },
  "Test": {
    "performed": "Yes",
    "Experimental Design Generation via literature-Grounded Model/Protocol Selection": {
      "performed": "No"
    },
    "Experimental Design Generation via Literature Synthesis for New Protocol Generation": {
      "performed": "No"
    },
    "Experimental Design Generation via Few-Shot or Example-Based Prompting": {
      "performed": "No"
    },
    "Experimental Design Generation via Executable Code Generation from Literature": {
      "performed": "Yes",
      "Method details": "LLMs generate Python code (using RDKit) to implement rules as feature extraction functions.",
      "Inputs": "LLM-generated rules, SMILES strings",
      "Outputs": "Executable code for feature extraction",
      "Example": "Code to compute molecular weight from SMILES using rdMolDescriptors.",
      "Role in workflow": "Automates translation of hypotheses into testable code."
    },
    "LLM-Based Experimental Design Generation via Agentic Exploration and Planning": {
      "performed": "No"
    },
    "LLM-Based Experimental Design Generation via Code and Workflow Translation": {
      "performed": "Yes",
      "Method details": "LLMs convert rules into code functions, enabling automated feature extraction and model training.",
      "Inputs": "LLM-generated rules, SMILES strings",
      "Outputs": "Feature vectors for model input",
      "Example": "Python functions for each rule, applied to molecular datasets.",
      "Role in workflow": "Bridges hypothesis generation and computational testing."
    },
    "LLM-Based Experimental Design Generation via Multi-Agent Planning with Specialized Roles": {
      "performed": "No"
    },
    "LLM-Based Experimental Design Generation via Domain-Specific Experimental Mapping": {
      "performed": "No"
    },
    "Test Execution via Human-in-the-Loop": {
      "performed": "No"
    },
    "Test Execution via Automated Wet-Lab Execution": {
      "performed": "No"
    },
    "Test Execution via Computational or In-Silico": {
      "performed": "Yes",
      "Method details": "Feature vectors are used to train and evaluate interpretable models (random forest, linear classifier) on benchmark datasets.",
      "Inputs": "Feature vectors, molecular property labels",
      "Outputs": "Model performance metrics (AUC-ROC, RMSE, MAE)",
      "Example": "Random forest trained on BBBP features achieves state-of-the-art AUC-ROC.",
      "Role in workflow": "Validates hypotheses and feature sets computationally."
    },
    "Refinement via LLM Agent Feedback Loops": {
      "performed": "No"
    },
    "Refinement via Automated Quality Evaluation using Model-Based Critics": {
      "performed": "No"
    },
    "Refinement via Dynamic Agent Updating Based on Evolving Context or Data": {
      "performed": "No"
    },
    "Refinement via guided by computational-data": {
      "performed": "Yes",
      "Method details": "Statistical significance testing and model performance guide rule selection and refinement.",
      "Inputs": "Model outputs, statistical test results",
      "Outputs": "Refined feature sets, removal of non-significant rules",
      "Example": "Rules with non-significant p-values are dropped from the model.",
      "Role in workflow": "Improves model quality and interpretability based on test outcomes."
    },
    "Refinement via experimental validation": {
      "performed": "No"
    },
    "Refinement via Performance-metric": {
      "performed": "Yes",
      "Method details": "Model performance metrics (AUC-ROC, RMSE, MAE) are used to select the best-performing feature/model combinations.",
      "Inputs": "Validation/test set results",
      "Outputs": "Optimized model configurations",
      "Example": "Selecting the backbone and sampling times with best validation performance.",
      "Role in workflow": "Ensures final model achieves optimal predictive accuracy."
    },
    "Refinement via Human–data integration": {
      "performed": "No"
    }
  },
  "paper_title": "Large language models for scientific discovery in molecular property prediction",
  "authors": [
    "Yizhen",
    "Huan Yee",
    "Jiaxin",
    "Anh T. N.",
    "Lauren T.",
    "Geoffrey I.",
    "Shirui"
  ],
  "published": "2025-03",
  "link": "https://www.nature.com/articles/s42256-025-00994-z"
}