{
  "Inputs to the workflow": {
    "performed": "Yes",
    "User provide high-level research direction or goal": {
      "performed": "Yes",
      "Format": "Research problem statement: improving clinical decision-making for diagnosis using LLMs.",
      "Example": "Model clinical decision-making for diagnosis with a hypothesis-driven uncertainty-aware language agent.",
      "Role in workflow": "Defines the scope and objective for the automated workflow."
    },
    "User provide structured, domain-specific specifications": {
      "performed": "Yes",
      "Format": "Specification of four abdominal diseases and available diagnostic tests.",
      "Example": "Possible diagnoses: appendicitis, cholecystitis, diverticulitis, pancreatitis; available tests: physical exam, imaging, lab panels.",
      "Role in workflow": "Constrains the diagnostic task and test selection for the agents."
    },
    "User provide research papers": {
      "performed": "No"
    },
    "User provide datasets other than research papers": {
      "performed": "Yes",
      "Format": "MIMIC-CDM dataset (real-world clinical data).",
      "Example": "2,400 patients with histories, imaging reports, and lab results.",
      "Role in workflow": "Provides the environment and patient cases for agent training and evaluation."
    },
    "User provide representations or formal inputs": {
      "performed": "Yes",
      "Format": "Standardized test names, structured prompts for agents.",
      "Example": "Test names mapped across patients; agent prompts specify input/output formats.",
      "Role in workflow": "Ensures consistent agent interaction and test request logic."
    }
  },
  "Query Structuring": {
    "performed": "Yes",
    "Query Decomposition": {
      "performed": "Yes",
      "Method details": "Decision agent uses ReAct prompting to break down the diagnostic process into sequential test requests and reasoning steps.",
      "Inputs": "Patient state, hypothesis/confidence from hypothesis agent.",
      "Outputs": "Structured actions: request test or diagnose.",
      "Example": "Thought: Given symptoms, order Physical Examination. Action: Test. Action Input: Physical Examination.",
      "Role in workflow": "Enables stepwise, interpretable diagnostic reasoning."
    },
    "Structural or Entity Decomposition": {
      "performed": "No"
    },
    "Workflow Decomposition": {
      "performed": "Yes",
      "Method details": "Two-agent system: hypothesis agent generates diagnosis/confidence; decision agent selects next action.",
      "Inputs": "Patient state, hypothesis/confidence.",
      "Outputs": "Action (test request or diagnosis) at each step.",
      "Example": "Hypothesis agent outputs 'Hypothesis: Cholecystitis, Confidence: 7'; decision agent decides next test or diagnosis.",
      "Role in workflow": "Implements a multi-step, agentic workflow mirroring clinical reasoning."
    },
    "Textual or Knowledge Embedding": {
      "performed": "No"
    },
    "Molecular or Chemical Embedding": {
      "performed": "No"
    },
    "Biological or Phenotypic Embedding": {
      "performed": "No"
    },
    "Pattern and Feature Extraction": {
      "performed": "No"
    },
    "Biological Relationship Extraction": {
      "performed": "No"
    },
    "Property and Annotation Extraction": {
      "performed": "No"
    },
    "Sequence and Structure Feature Extraction": {
      "performed": "No"
    }
  },
  "Data Retrieval": {
    "performed": "Yes",
    "Data Retrieval via Multi-Query Generation and Exploration": {
      "performed": "No"
    },
    "Literature and Data Retrieval via APIs": {
      "performed": "No"
    },
    "Data Retrieval with Prioritization and Filtering Agents": {
      "performed": "No"
    },
    "Domain-Specific Data Retrieval and Reasoning": {
      "performed": "Yes",
      "Method details": "Agents interact with a simulated environment built from MIMIC-CDM, requesting specific tests and receiving corresponding results.",
      "Inputs": "Test requests from decision agent.",
      "Outputs": "Relevant test results (lab, imaging, notes) for the patient.",
      "Example": "Agent requests 'Ultrasound'; environment returns ultrasound report for that patient.",
      "Role in workflow": "Provides contextually relevant clinical data for each diagnostic step."
    },
    "Code-Driven or Tool-Augmented Data Retrieval": {
      "performed": "No"
    },
    "Literature data Retrieval Citation-Network–Based Expansion": {
      "performed": "No"
    },
    "Literature data Retrieval via Semantic and Similarity-Based analysis": {
      "performed": "No"
    },
    "Literature data Retrieval via Multi-Step Reference and Evidence Selection": {
      "performed": "No"
    },
    "Domain-Specific Literature data Retrieval": {
      "performed": "No"
    },
    "Manual and Semi-Automatic Curation of Literature data": {
      "performed": "No"
    },
    "Structural or Similarity-Based Dataset Retrieval": {
      "performed": "No"
    },
    "Data Retrieval via Domain-Specific Repository Querying": {
      "performed": "No"
    },
    "Library Assembly and Data Augmentation": {
      "performed": "No"
    }
  },
  "Knowledge Assembly": {
    "performed": "Yes",
    "Standardized Section Extraction from Literature data": {
      "performed": "Yes",
      "Method details": "Imaging reports are shortened to findings sections; patient histories are summarized for brevity.",
      "Inputs": "Raw imaging reports, patient histories.",
      "Outputs": "Standardized, concise text fields.",
      "Example": "Only 'findings' section of imaging report retained.",
      "Role in workflow": "Reduces input complexity and normalizes data for agent processing."
    },
    "Concise Synopsis and Summarization of Literature data": {
      "performed": "Yes",
      "Method details": "Mixtral-8x7B model used to summarize patient histories.",
      "Inputs": "Long patient histories.",
      "Outputs": "Summarized patient history.",
      "Example": "Summarized patient history provided as initial state.",
      "Role in workflow": "Improves efficiency and relevance of agent input."
    },
    "Facet-Based or Field-Specific Extraction from Literature data": {
      "performed": "No"
    },
    "Domain-Tailored Extraction from Literature data": {
      "performed": "No"
    },
    "Task/Entity-Centric Knowledge Graphs": {
      "performed": "No"
    },
    "Causal or Relation-Specific Knowledge Graphs": {
      "performed": "No"
    },
    "Biomedical or Domain-Specific Interaction Graphs": {
      "performed": "No"
    },
    "Literature Database Construction": {
      "performed": "No"
    },
    "Entity- or Co-Occurrence–Based Databases": {
      "performed": "No"
    },
    "Reasoning-Chain or Temporal Databases for Literature": {
      "performed": "No"
    }
  },
  "Hypothesis/Idea Generation": {
    "performed": "Yes",
    "Idea/hypothesis generation without additional literature or dataset as context": {
      "performed": "No"
    },
    "LLM Agent Generate ideas/hypotheses via Task Decomposition": {
      "performed": "No"
    },
    "Generate ideas/hypotheses using Domain-Specialized LLM Agent": {
      "performed": "Yes",
      "Method details": "Hypothesis agent (LLM) generates diagnosis hypotheses and confidence scores based on patient data.",
      "Inputs": "Current patient state (history, test results).",
      "Outputs": "Diagnosis hypothesis and confidence (0-10).",
      "Example": "Hypothesis: Cholecystitis, Confidence: 7.",
      "Role in workflow": "Synthesizes available evidence to propose likely diagnoses."
    },
    "Literature data used during idea/hypothesis generation as context": {
      "performed": "No"
    },
    "Summarization Literature data used during idea/hypothesis generation": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Facet Recombination": {
      "performed": "No"
    },
    "Idea/hypothesis generation via contructed Reasoning-Chain from literature": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Knowledge Graph developed from literature": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Pattern Detection from dataset": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Few-Shot Data Seeding": {
      "performed": "No"
    },
    "Idea/hypothesis generation using Observational data": {
      "performed": "No"
    },
    "Idea/hypothesis generation via Feature-Driven Property Prediction": {
      "performed": "No"
    },
    "Idea/hypothesis generation after Fine-Tuning the LLM model": {
      "performed": "Yes",
      "Method details": "LLM is fine-tuned using supervised and reinforcement learning on MIMIC-CDM for hypothesis generation.",
      "Inputs": "Patient data from MIMIC-CDM.",
      "Outputs": "Improved diagnostic hypotheses and confidence calibration.",
      "Example": "After training, hypothesis agent achieves higher accuracy and better-calibrated confidence.",
      "Role in workflow": "Enhances hypothesis quality and uncertainty estimation."
    }
  },
  "Hypothesis/Idea Prioritization": {
    "performed": "Yes",
    "LLM-based Hypothesis/Idea evaluation via Scientific Quality": {
      "performed": "No"
    },
    "LLM-based Hypothesis/Idea evaluation via Domain-Specific Evaluation": {
      "performed": "Yes",
      "Method details": "Decision agent evaluates hypothesis and confidence to decide whether to request further tests or diagnose.",
      "Inputs": "Hypothesis/confidence from hypothesis agent, patient state.",
      "Outputs": "Action: request test or provide diagnosis.",
      "Example": "If confidence is high, agent proceeds to diagnosis; otherwise, requests more tests.",
      "Role in workflow": "Focuses resources on most plausible diagnoses, improving efficiency."
    },
    "LLM-based Hypothesis/Idea evaluation via Contextual Evidence Scoring": {
      "performed": "No"
    },
    "LLM-based Hypothesis/Idea evaluation via Interpretability or Success Metrics": {
      "performed": "Yes",
      "Method details": "Confidence calibration is explicitly trained using RL to align confidence scores with actual correctness.",
      "Inputs": "Hypothesis/confidence, ground truth diagnosis.",
      "Outputs": "Calibrated confidence scores.",
      "Example": "Model receives reward for well-calibrated confidence; penalized for over/under-confidence.",
      "Role in workflow": "Improves interpretability and reliability of agent outputs."
    },
    "Hypothesis/Idea evaluation via Novelty Checking with Literature Comparison": {
      "performed": "No"
    },
    "Hypothesis/Idea evaluation via Alignment with Literature Chains": {
      "performed": "No"
    },
    "Hypothesis/Idea evaluation via Knowledge-Graph Grounded Similarity Metrics": {
      "performed": "No"
    },
    "Hypothesis/Idea evaluation via Quantitative Assessment Using Domain Metrics": {
      "performed": "Yes",
      "Method details": "Final diagnosis is rewarded if correct, penalized if incorrect; efficiency measured by number of tests used.",
      "Inputs": "Predicted diagnosis, ground truth, test count.",
      "Outputs": "Performance metrics (accuracy, F1, test count).",
      "Example": "Model achieves high accuracy with fewer tests after training.",
      "Role in workflow": "Quantitatively assesses and incentivizes efficient, accurate decision-making."
    },
    "Hypothesis/Idea evaluation via Human/Expert": {
      "performed": "No"
    }
  },
  "Test": {
    "performed": "Yes",
    "Experimental Design Generation via literature-Grounded Model/Protocol Selection": {
      "performed": "No"
    },
    "Experimental Design Generation via Literature Synthesis for New Protocol Generation": {
      "performed": "No"
    },
    "Experimental Design Generation via Few-Shot or Example-Based Prompting": {
      "performed": "No"
    },
    "Experimental Design Generation via Executable Code Generation from Literature": {
      "performed": "No"
    },
    "LLM-Based Experimental Design Generation via Agentic Exploration and Planning": {
      "performed": "Yes",
      "Method details": "Decision agent autonomously plans and executes test request sequences based on evolving patient state and hypothesis confidence.",
      "Inputs": "Current patient state, hypothesis/confidence.",
      "Outputs": "Sequence of test requests and final diagnosis.",
      "Example": "Agent requests CBC, then ultrasound, then CT, before diagnosing appendicitis.",
      "Role in workflow": "Implements adaptive, agent-driven experimental planning for diagnosis."
    },
    "LLM-Based Experimental Design Generation via Code and Workflow Translation": {
      "performed": "No"
    },
    "LLM-Based Experimental Design Generation via Multi-Agent Planning with Specialized Roles": {
      "performed": "Yes",
      "Method details": "Two-agent system: hypothesis agent specializes in diagnosis/confidence; decision agent specializes in action selection.",
      "Inputs": "Patient data, hypothesis/confidence.",
      "Outputs": "Coordinated diagnostic workflow.",
      "Example": "Hypothesis agent updates diagnosis; decision agent chooses next test or diagnosis.",
      "Role in workflow": "Enables division of labor and specialization in diagnostic reasoning."
    },
    "LLM-Based Experimental Design Generation via Domain-Specific Experimental Mapping": {
      "performed": "No"
    },
    "Test Execution via Human-in-the-Loop": {
      "performed": "No"
    },
    "Test Execution via Automated Wet-Lab Execution": {
      "performed": "No"
    },
    "Test Execution via Computational or In-Silico": {
      "performed": "Yes",
      "Method details": "All diagnostic actions and test results are simulated in a computational environment using retrospective patient data.",
      "Inputs": "Agent actions (test requests, diagnoses).",
      "Outputs": "Simulated test results, diagnosis outcomes.",
      "Example": "Agent requests test; environment returns stored result from dataset.",
      "Role in workflow": "Enables safe, repeatable evaluation and training of diagnostic strategies."
    },
    "Refinement via LLM Agent Feedback Loops": {
      "performed": "No"
    },
    "Refinement via Automated Quality Evaluation using Model-Based Critics": {
      "performed": "No"
    },
    "Refinement via Dynamic Agent Updating Based on Evolving Context or Data": {
      "performed": "Yes",
      "Method details": "Agents update hypotheses and actions as new test results are revealed at each step.",
      "Inputs": "Updated patient state after each test.",
      "Outputs": "Refined hypotheses, updated action choices.",
      "Example": "After receiving new lab result, hypothesis agent revises confidence and diagnosis.",
      "Role in workflow": "Supports iterative, context-aware refinement of diagnostic reasoning."
    },
    "Refinement via guided by computational-data": {
      "performed": "Yes",
      "Method details": "Reinforcement learning rewards/punishes agent actions based on diagnostic correctness and efficiency.",
      "Inputs": "Diagnosis outcome, number of tests used.",
      "Outputs": "Updated agent policies.",
      "Example": "Correct, efficient diagnoses are reinforced; inefficient or incorrect ones are penalized.",
      "Role in workflow": "Drives learning and optimization of diagnostic strategies."
    },
    "Refinement via experimental validation": {
      "performed": "No"
    },
    "Refinement via Performance-metric": {
      "performed": "Yes",
      "Method details": "Performance metrics (accuracy, F1, test count, calibration error) guide model selection and training.",
      "Inputs": "Validation/test set results.",
      "Outputs": "Model improvements based on quantitative feedback.",
      "Example": "Model with lower expected calibration error and fewer tests is preferred.",
      "Role in workflow": "Ensures continual improvement based on objective outcomes."
    },
    "Refinement via Human–data integration": {
      "performed": "No"
    }
  },
  "paper_title": "Language Agents for Hypothesis-driven Clinical Decision Making with Reinforcement Learning",
  "authors": [
    "David",
    "Chantal",
    "Ege",
    "Matthias",
    "Nassir"
  ],
  "published": "2025-06-16",
  "link": "http://arxiv.org/abs/2506.13474"
}