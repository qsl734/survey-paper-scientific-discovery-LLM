{
  "Inputs to the workflow": {
    "performed": "Yes",
    "User provide high-level research direction or goal": {
      "performed": "Yes",
      "Format": "Task/problem statement (e.g., symbolic regression problems from benchmarks)",
      "Example": "Oscillation 1, Oscillation 2, E. coli growth, Stress-Strain problems",
      "Role in workflow": "Defines the scientific or engineering challenge for which symbolic solutions are sought."
    },
    "User provide structured, domain-specific specifications": {
      "performed": "No",
      "Format": "",
      "Example": "",
      "Role in workflow": ""
    },
    "User provide research papers": {
      "performed": "No",
      "Format": "",
      "Example": "",
      "Role in workflow": ""
    },
    "User provide datasets other than research papers": {
      "performed": "Yes",
      "Format": "Benchmark datasets (AI Feynman, four problems from [30])",
      "Example": "Physics and engineering datasets for symbolic regression tasks",
      "Role in workflow": "Provides data for evaluating and guiding the search for symbolic solutions."
    },
    "User provide representations or formal inputs": {
      "performed": "Yes",
      "Format": "Task definitions, solution formats (natural language, code, formulas, logic expressions)",
      "Example": "Python code, mathematical formulas, logic expressions",
      "Role in workflow": "Specifies the allowed forms for candidate solutions and guides LLM-based search."
    }
  },
  "Query Structuring": {
    "performed": "Yes",
    "Query Decomposition": {
      "performed": "Yes",
      "Method details": "Tree-based idea search process decomposes the problem into initial ideas and iteratively refines them.",
      "Inputs": "Task/problem statement",
      "Outputs": "Multiple initial and refined ideas (nodes in a tree structure)",
      "Example": "Generation of N0 initial ideas, then Nk ideas at each level based on feedback",
      "Role in workflow": "Enables systematic exploration of solution space by breaking down the problem into manageable sub-ideas."
    },
    "Structural or Entity Decomposition": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Workflow Decomposition": {
      "performed": "Yes",
      "Method details": "Multi-phased reasoning process with tree-based search; each phase refines or expands ideas based on evaluator feedback.",
      "Inputs": "Initial ideas, evaluator feedback",
      "Outputs": "Refined ideas and solution candidates",
      "Example": "Iterative levels in the tree-based idea search, each representing a sub-task or refinement",
      "Role in workflow": "Structures the search as a sequence of reasoning and refinement steps."
    },
    "Textual or Knowledge Embedding": {
      "performed": "Yes",
      "Method details": "Sentence embeddings computed for ideas in the knowledge library; clustering based on cosine similarity.",
      "Inputs": "Textual representations of ideas",
      "Outputs": "Vector embeddings, clusters of similar ideas",
      "Example": "Clustering ideas in the knowledge library for similarity-based retrieval",
      "Role in workflow": "Enables similarity-based reuse and organization of knowledge for efficient retrieval."
    },
    "Molecular or Chemical Embedding": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Biological or Phenotypic Embedding": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Pattern and Feature Extraction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Biological Relationship Extraction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Property and Annotation Extraction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Sequence and Structure Feature Extraction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "Data Retrieval": {
    "performed": "Yes",
    "Data Retrieval via Multi-Query Generation and Exploration": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature and Data Retrieval via APIs": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Data Retrieval with Prioritization and Filtering Agents": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Domain-Specific Data Retrieval and Reasoning": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Code-Driven or Tool-Augmented Data Retrieval": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature data Retrieval Citation-Network–Based Expansion": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature data Retrieval via Semantic and Similarity-Based analysis": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature data Retrieval via Multi-Step Reference and Evidence Selection": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Domain-Specific Literature data Retrieval": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Manual and Semi-Automatic Curation of Literature data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Structural or Similarity-Based Dataset Retrieval": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Data Retrieval via Domain-Specific Repository Querying": {
      "performed": "Yes",
      "Method details": "Benchmark datasets (AI Feynman, four problems from [30]) are used as standard sources for tasks.",
      "Inputs": "Physics and engineering datasets",
      "Outputs": "Task-specific data for symbolic regression",
      "Example": "AI Feynman benchmark, four problems from [30]",
      "Role in workflow": "Provides ground-truth data for evaluating candidate symbolic solutions."
    },
    "Library Assembly and Data Augmentation": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "Knowledge Assembly": {
    "performed": "Yes",
    "Standardized Section Extraction from Literature data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Concise Synopsis and Summarization of Literature data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Facet-Based or Field-Specific Extraction from Literature data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Domain-Tailored Extraction from Literature data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Task/Entity-Centric Knowledge Graphs": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Causal or Relation-Specific Knowledge Graphs": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Biomedical or Domain-Specific Interaction Graphs": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature Database Construction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Entity- or Co-Occurrence–Based Databases": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Reasoning-Chain or Temporal Databases for Literature": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "Hypothesis/Idea Generation": {
    "performed": "Yes",
    "Idea/hypothesis generation without additional literature or dataset as context": {
      "performed": "Yes",
      "Method details": "LLMs (GPT-3.5, GPT-4o-mini) generate initial and refined ideas using internal knowledge and reasoning.",
      "Inputs": "Task/problem statement",
      "Outputs": "Candidate symbolic solutions in various formats",
      "Example": "LLM generates mathematical formulas or code for a given regression problem",
      "Role in workflow": "Produces candidate solutions for evaluation and further refinement."
    },
    "LLM Agent Generate ideas/hypotheses via Task Decomposition": {
      "performed": "Yes",
      "Method details": "Tree-based idea search decomposes the problem into sub-ideas, each refined iteratively.",
      "Inputs": "Task/problem statement",
      "Outputs": "Multiple ideas at each tree level",
      "Example": "N0 initial ideas, Nk ideas at subsequent levels",
      "Role in workflow": "Structures the creative process and enables systematic exploration."
    },
    "Generate ideas/hypotheses using Domain-Specialized LLM Agent": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Literature data used during idea/hypothesis generation as context": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Summarization Literature data used during idea/hypothesis generation": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via Facet Recombination": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via contructed Reasoning-Chain from literature": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via Knowledge Graph developed from literature": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via Pattern Detection from dataset": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via Few-Shot Data Seeding": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation using Observational data": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation via Feature-Driven Property Prediction": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Idea/hypothesis generation after Fine-Tuning the LLM model": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "Hypothesis/Idea Prioritization": {
    "performed": "Yes",
    "LLM-based Hypothesis/Idea evaluation via Scientific Quality": {
      "performed": "Yes",
      "Method details": "Task evaluator (LLM or code) assesses ideas for viability and effectiveness, providing feedback for refinement.",
      "Inputs": "Candidate solutions/ideas",
      "Outputs": "Feedback, scores, or selection for next iteration",
      "Example": "Evaluator scores solutions for alignment with task requirements",
      "Role in workflow": "Filters and guides the evolution of promising solutions."
    },
    "LLM-based Hypothesis/Idea evaluation via Domain-Specific Evaluation": {
      "performed": "Yes",
      "Method details": "Evaluation includes domain-specific metrics such as Normalized Mean Squared Error (NMSE) on benchmark datasets.",
      "Inputs": "Candidate solutions, benchmark data",
      "Outputs": "Quantitative scores (e.g., NMSE)",
      "Example": "Solutions evaluated on physics/engineering datasets for accuracy",
      "Role in workflow": "Ensures solutions are not only plausible but quantitatively effective."
    },
    "LLM-based Hypothesis/Idea evaluation via Contextual Evidence Scoring": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "LLM-based Hypothesis/Idea evaluation via Interpretability or Success Metrics": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Hypothesis/Idea evaluation via Novelty Checking with Literature Comparison": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Hypothesis/Idea evaluation via Alignment with Literature Chains": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Hypothesis/Idea evaluation via Knowledge-Graph Grounded Similarity Metrics": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Hypothesis/Idea evaluation via Quantitative Assessment Using Domain Metrics": {
      "performed": "Yes",
      "Method details": "Solutions are quantitatively assessed using NMSE and other performance metrics on benchmark datasets.",
      "Inputs": "Candidate solutions, benchmark data",
      "Outputs": "Performance scores (e.g., NMSE)",
      "Example": "Table 1 reports NMSE for each method/problem",
      "Role in workflow": "Objectively ranks and selects best-performing solutions."
    },
    "Hypothesis/Idea evaluation via Human/Expert": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "Test": {
    "performed": "Yes",
    "Experimental Design Generation via literature-Grounded Model/Protocol Selection": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Experimental Design Generation via Literature Synthesis for New Protocol Generation": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Experimental Design Generation via Few-Shot or Example-Based Prompting": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Experimental Design Generation via Executable Code Generation from Literature": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "LLM-Based Experimental Design Generation via Agentic Exploration and Planning": {
      "performed": "Yes",
      "Method details": "LLM-driven evolutionary search (initialization, crossover, mutation) autonomously explores solution space.",
      "Inputs": "Task/problem statement, knowledge library",
      "Outputs": "Candidate solutions for evaluation",
      "Example": "Population-based evolution with positive/negative crossover and mutation",
      "Role in workflow": "Enables autonomous, iterative exploration and refinement of solutions."
    },
    "LLM-Based Experimental Design Generation via Code and Workflow Translation": {
      "performed": "Yes",
      "Method details": "LLMs generate candidate solutions in executable formats (e.g., Python code) for automatic evaluation.",
      "Inputs": "Task/problem statement",
      "Outputs": "Executable code or formulas",
      "Example": "Python code generated for symbolic regression tasks",
      "Role in workflow": "Facilitates automated testing and evaluation of solutions."
    },
    "LLM-Based Experimental Design Generation via Multi-Agent Planning with Specialized Roles": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "LLM-Based Experimental Design Generation via Domain-Specific Experimental Mapping": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Test Execution via Human-in-the-Loop": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Test Execution via Automated Wet-Lab Execution": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Test Execution via Computational or In-Silico": {
      "performed": "Yes",
      "Method details": "Candidate solutions are evaluated computationally using benchmark datasets and quantitative metrics.",
      "Inputs": "Candidate solutions, benchmark data",
      "Outputs": "Performance scores (e.g., NMSE)",
      "Example": "Automatic evaluation of symbolic expressions on test data",
      "Role in workflow": "Validates solution quality and guides further refinement."
    },
    "Refinement via LLM Agent Feedback Loops": {
      "performed": "Yes",
      "Method details": "LLM receives evaluator feedback and iteratively refines ideas/solutions in the tree-based search and evolutionary process.",
      "Inputs": "Evaluator feedback, candidate solutions",
      "Outputs": "Improved solutions in subsequent iterations",
      "Example": "Tree-based search and evolutionary operators use feedback to generate better solutions",
      "Role in workflow": "Enables continual improvement and convergence on high-quality solutions."
    },
    "Refinement via Automated Quality Evaluation using Model-Based Critics": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Refinement via Dynamic Agent Updating Based on Evolving Context or Data": {
      "performed": "Yes",
      "Method details": "Knowledge library is updated with new ideas and performance improvements, influencing future search iterations.",
      "Inputs": "Improved solutions, knowledge library",
      "Outputs": "Updated knowledge clusters, refined solution generation",
      "Example": "Summarization and reuse of effective ideas in knowledge library",
      "Role in workflow": "Ensures the search process adapts to new discoveries and evolving context."
    },
    "Refinement via guided by computational-data": {
      "performed": "Yes",
      "Method details": "Refinement is driven by performance metrics (e.g., NMSE) from computational evaluation of candidate solutions.",
      "Inputs": "Performance scores, candidate solutions",
      "Outputs": "Selection and generation of improved solutions",
      "Example": "Population update based on top NMSE scores",
      "Role in workflow": "Directs search toward more effective solutions based on quantitative feedback."
    },
    "Refinement via experimental validation": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    },
    "Refinement via Performance-metric": {
      "performed": "Yes",
      "Method details": "Performance metrics (e.g., NMSE) are used to select and retain the best solutions in each generation.",
      "Inputs": "Performance scores",
      "Outputs": "Updated population of solutions",
      "Example": "Top N solutions with highest scores retained for next generation",
      "Role in workflow": "Ensures only the most effective solutions are propagated."
    },
    "Refinement via Human–data integration": {
      "performed": "No",
      "Method details": "",
      "Inputs": "",
      "Outputs": "",
      "Example": "",
      "Role in workflow": ""
    }
  },
  "paper_title": "CoEvo: Continual Evolution of Symbolic Solutions Using Large Language Models",
  "authors": [
    "Ping",
    "Qingfu",
    "Xi"
  ],
  "published": "2024-12-25",
  "link": "http://arxiv.org/abs/2412.18890"
}